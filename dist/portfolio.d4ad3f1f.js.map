{"version":3,"sources":["portfolio.js"],"names":["textToChange","document","querySelectorAll","MIN_SPEED","MAX_SPEED","wait","ms","Promise","resolve","setTimeout","generateRandomNumber","min","max","Math","floor","random","typeText","el","textAr","textContent","element","char","speed","forEach"],"mappings":"AAAA;AACA,MAAMA,YAAY,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,cAA1B,CAArB,EACA;;AACA,MAAMC,SAAS,GAAG,EAAlB;AACA,MAAMC,SAAS,GAAG,GAAlB,EAEA;;AACA,MAAMC,IAAI,GAAG,MAAOC,EAAP,IAAc,IAAIC,OAAJ,CAAaC,OAAD,IAAaC,UAAU,CAACD,OAAD,EAAUF,EAAV,CAAnC,CAA3B,EAEA;;;AACA,MAAMI,oBAAoB,GAAG,CAACC,GAAD,EAAMC,GAAN,KAAcC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBH,GAAG,GAAGD,GAAvB,IAA8BA,GAAzC,CAA3C,EAEA;;;AACA,MAAMK,QAAQ,GAAG,OAAOC,EAAP,EAAWN,GAAX,EAAgBC,GAAhB,KAAwB;AACvC;AACA,QAAMM,MAAM,GAAG,CAAC,GAAGD,EAAE,CAACE,WAAP,CAAf,CAFuC,CAGvC;;AACA,MAAIC,OAAO,GAAG,EAAd,CAJuC,CAKvC;;AACA,OAAK,MAAMC,IAAX,IAAmBH,MAAnB,EAA2B;AACzB;AACA,UAAMI,KAAK,GAAGZ,oBAAoB,CAACC,GAAD,EAAMC,GAAN,CAAlC;AACA,UAAMP,IAAI,CAACiB,KAAD,CAAV;AACAF,IAAAA,OAAO,IAAIC,IAAX;AACAJ,IAAAA,EAAE,CAACE,WAAH,GAAiBC,OAAjB;AACD;AACF,CAbD;;AAeApB,YAAY,CAACuB,OAAb,CAAsBN,EAAD,IAAQ;AAC3BD,EAAAA,QAAQ,CAACC,EAAD,EAAKd,SAAL,EAAgBC,SAAhB,CAAR;AACD,CAFD","file":"portfolio.d4ad3f1f.js","sourceRoot":"..","sourcesContent":["// Select the elements to do the typeEffect with\r\nconst textToChange = document.querySelectorAll('.type-effect');\r\n// Set initial and max speed of typing for natural effect\r\nconst MIN_SPEED = 30;\r\nconst MAX_SPEED = 140;\r\n\r\n// Create a wait function to do synchronous stuff\r\nconst wait = async (ms) => new Promise((resolve) => setTimeout(resolve, ms));\r\n\r\n// Generate a random number to mimic a more natural typing\r\nconst generateRandomNumber = (min, max) => Math.floor(Math.random() * (max - min) + min);\r\n\r\n// Function to create a typing effect\r\nconst typeText = async (el, min, max) => {\r\n  // Split text into individual characters\r\n  const textAr = [...el.textContent];\r\n  // Set initial text\r\n  let element = '';\r\n  // Use for of since it actually waits instead of forEach which is asynchronous\r\n  for (const char of textAr) {\r\n    // Set speed using minimum and maximum natural typing speed\r\n    const speed = generateRandomNumber(min, max);\r\n    await wait(speed);\r\n    element += char;\r\n    el.textContent = element;\r\n  }\r\n};\r\n\r\ntextToChange.forEach((el) => {\r\n  typeText(el, MIN_SPEED, MAX_SPEED);\r\n});\r\n"]}